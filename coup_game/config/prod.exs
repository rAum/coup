import Config

# For production, don't forget to configure the url host
# to something meaningful, Phoenix uses this information
# when generating URLs.
#
# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix phx.digest` task,
# which you should run after static files are built and
# before starting your production server.
config :coup_game, CoupGameWeb.Endpoint, cache_static_manifest: "priv/static/cache_manifest.json"

# Do not print debug messages in production
config :logger, level: :info


# fly.io: Select configuration: Development - Single node, 1x shared CPU, 256MB RAM, 1GB disk
# Creating postgres cluster coup-pg in organization personal
# Postgres cluster coup-pg created
#   Username:    postgres
#   Password:    8cd21406a94bab8bc5767260860b8d97fe2cf0e8a8fd1acf
#   Hostname:    coup-pg.internal
#   Proxy Port:  5432
#   PG Port: 5433
# Save your credentials in a secure place, you won't be able to see them again!

# Monitoring Deployment

# 1 desired, 1 placed, 1 healthy, 0 unhealthy [health checks: 3 total, 3 passing]
# --> v0 deployed successfully

# Connect to postgres
# Any app within the personal organization can connect to postgres using the above credentials and the hostname "coup-pg.internal."
# For example: postgres://postgres:8cd21406a94bab8bc5767260860b8d97fe2cf0e8a8fd1acf@coup-pg.internal:5432

# Now you've setup postgres, here's what you need to understand: https://fly.io/docs/reference/postgres-whats-next/


# Configure your database
config :coup_game, CoupGame.Repo,
  username: "postgres",
  password: "8cd21406a94bab8bc5767260860b8d97fe2cf0e8a8fd1acf",
  hostname: "coup-pg.internal",
  database: "coup_game",
  port: 5432,
  stacktrace: false,
  show_sensitive_data_on_connection_error: false,
  pool_size: 10

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :coup_game, CoupGameWeb.Endpoint,
#       ...,
#       url: [host: "example.com", port: 443],
#       https: [
#         ...,
#         port: 443,
#         cipher_suite: :strong,
#         keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#         certfile: System.get_env("SOME_APP_SSL_CERT_PATH")
#       ]
#
# The `cipher_suite` is set to `:strong` to support only the
# latest and more secure SSL ciphers. This means old browsers
# and clients may not be supported. You can set it to
# `:compatible` for wider support.
#
# `:keyfile` and `:certfile` expect an absolute path to the key
# and cert in disk or a relative path inside priv, for example
# "priv/ssl/server.key". For all supported SSL configuration
# options, see https://hexdocs.pm/plug/Plug.SSL.html#configure/1
#
# We also recommend setting `force_ssl` in your endpoint, ensuring
# no data is ever sent via http, always redirecting to https:
#
#     config :coup_game, CoupGameWeb.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.
